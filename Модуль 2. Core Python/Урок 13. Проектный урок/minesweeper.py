import random
import os

SIZE = 5
MINES = 5

def clear_console():
    #os.system('cls' if os.name == 'nt' else 'clear')
    print("\n" * 50)

def generate_board():
    # –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª—è –∏–≥—Ä—ã
    board = [[0 for _ in range(SIZE)] for _ in range(SIZE)]
    mine_positions = set()
    while len(mine_positions) < MINES:
        r = random.randint(0, SIZE - 1)
        c = random.randint(0, SIZE - 1)
        mine_positions.add((r, c))
        #–¢—É—Ç –º—ã –Ω–∞–∑–Ω–∞—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–∏–Ω–∞–º

    for r, c in mine_positions:
        board[r][c] = '*'
        for i in range(r - 1, r + 2):
            for j in range(c - 1, c + 2):
                if 0 <= i < SIZE and 0 <= j < SIZE and board[i][j] != '*':
                    board[i][j] += 1
                    # —Ç—É—Ç —è –¥–µ–ª–∞—é –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –ø–æ–ª—è–º –¥–ª—è —Å—á–µ—Ç—á–∏–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç—ã–µ –ø–æ–ª—è –∏–º–µ—é—Ç 0
    return board, mine_positions

def print_board(visible):
    # —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∏–≥–æ–≤–æ–≥–æ –ø–æ–ª—è —Å –Ω–∞–ª–æ–∂–µ–Ω–∏–µ–º –º–∞—Å–∫–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π.
    for row in visible:
        print(" ".join(str(cell) if cell is not None else '-' for cell in row))

def reveal(board, visible, r, c, visited):
    #—Ñ—É–Ω–∫—Ü–∏—è —Ö–æ–¥–æ–≤ –≤—Å–∫—Ä—ã—Ç–∏–µ –ø—É—Å—Ç—ã—Ö –∫–ª–µ—Ç–æ–∫ –∫–æ—Ç–æ—Ä—ã–µ 0
    if (r, c) in visited or not (0 <= r < SIZE and 0 <= c < SIZE):
        return 0
    visited.add((r, c))
    if visible[r][c] is not None:
        return 0

    visible[r][c] = board[r][c]
    count = 1
    if board[r][c] == 0:
        for i in range(r - 1, r + 2):
            for j in range(c - 1, c + 2):
                count += reveal(board, visible, i, j, visited)
    return count


def play_game():
    #—Ç–µ–ª–æ –∏–≥—Ä—ã
    board, mines = generate_board()
    #–°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ.
    visible = [[None for _ in range(SIZE)] for _ in range(SIZE)]
    opened = 0
    total_safe = SIZE * SIZE - MINES
    # –∏ –±–∞–∑–æ–≤—ã–µ –∏–≥—Ä–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.

    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°–∞–ø—ë—Ä–∞!")
    # –°—Ç–∞—Ä—Ç
    while True:
        clear_console()
        print_board(visible)
        try:
            # –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–æ–ª—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏ —Ç—Ä–∞–π —á—Ç–æ –±—ã –Ω–µ–±—ã–ª–æ –æ—à–∏–±–æ–∫
            move = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–µ—Ç–∫–∏ (—Å—Ç—Ä–æ–∫–∞ —Å—Ç–æ–ª–±–µ—Ü): ")
            if move.lower() == 'pressxtowin':
                clear_console()
                final_view = [[board[i][j] for j in range(SIZE)] for i in range(SIZE)]
                print_board(final_view)
                print("(üëç‚âñ‚Äø‚Äø‚âñ)üëç –ß–∏—Ç–µ—Ä –ø–æ–±–µ–¥–∏–ª! –ö–∞—Ä—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üëç(‚âñ‚Äø‚Äø‚âñüëç)")
                return
            elif move.lower() in ("q", "quit", "exit"):
                print("–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é Game Hub...")
                return
            r, c = map(int, move.strip().split())
            r -= 1
            c -= 1
            # —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –æ—Ç–±—Ä–æ—Å–∫–∞ –ø—Ä–æ–±–µ–ª–æ–≤ –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –∏–Ω–¥–µ–∫—Å—É
            if not (0 <= r < SIZE and 0 <= c < SIZE):
                print("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞.")
                continue
            #–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —Ç—É—Ç
            if visible[r][c] is not None:
                print("–ö–ª–µ—Ç–∫–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞.")
                continue
            #–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–ª—å—à—Ö–æ–¥–∞
            if board[r][c] == '*':
                clear_console()
                final_view = [[board[i][j] for j in range(SIZE)] for i in range(SIZE)]
                print_board(final_view)
                print("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –í—ã –ø–æ–ø–∞–ª–∏ –Ω–∞ –º–∏–Ω—É.")
                break
            # –•–æ–¥ c –û—Ç–∫—Ä—ã—Ç–∏–µ–º –ø—É—Å—Ç—ã—Ö –∫–ª–µ—Ç–æ–∫

            visited = set()
            newly_opened = reveal(board, visible, r, c, visited)
            opened += newly_opened

            if opened == total_safe:
                print_board([[board[i][j] if board[i][j] != '*' else '-' for j in range(SIZE)] for i in range(SIZE)])
                print("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –æ—Ç–∫—Ä—ã–ª–∏ –≤—Å–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–ª–µ—Ç–∫–∏.")
                break
        except ValueError:
            print("–í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")

if __name__ == "__main__":
    print("–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ. –†–∞–∑—Ä–∞–±–æ—á–∏–∫ Pankov Kyrylo http://pankov.it")
    play_game()